The program is to use the "divide and conquer" method to find the number of inversions in a given array. The program must contain a recursive method Inversion() operating in O(n logn) time and using an auxiliary array of length at most n/2+1.

Input:
The first value provided is a positive integer indicating the number of data sets, after which the same number of data sets will appear as input.
Each data set contains:
- A positive integer in the range of 1 to 2^15 indicating the amount of data being read.
- The actual data set, consisting of the previously read value number of integers, which are integers in the range of -2^48 to +2^48.

Output:
Number of inversions for every given array.

Tests:
 Input:
 4
 5
 1 2 1 2 1
 1
 0
 2
 2 1
 4
 5 4 4 4

 Output:
 3
 0
 1
 3

 Input:
 4
 3
 1 2 3
 5
 2 2 3 2 2
 5
 1 1 1 1 2
 6
 1 7 5 49 23 2

 Output:
 0
 2
 0
 6

 Input:
 4
 10
 1 2 3 4 5 6 7 8 9 10
 10
 10 1 2 3 4 5 6 7 8 9
 10
 10 9 8 7 6 5 4 3 2 1
 10
 0 0 0 0 0 0 0 0 0 0

 Output:
 0
 9
 45
 0 
